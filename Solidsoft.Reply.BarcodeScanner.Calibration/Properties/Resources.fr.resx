<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdviceItemRemainingMismatch" xml:space="preserve">
    <value>Les éléments de conseil restants ne correspondent pas.</value>
    <comment>Error</comment>
  </data>
  <data name="Barcodes_Error_100" xml:space="preserve">
    <value>Le suffixe {0} ne correspond pas au suffixe attendu {1}.</value>
    <comment>Error</comment>
  </data>
  <data name="CalibrateDeadKeyIncorrectBarcodeProvenance" xml:space="preserve">
    <value>Provenance de code-barres incorrecte.</value>
  </data>
  <data name="CalibrationIncorrectErrorInformationType" xml:space="preserve">
    <value>Type d'information d'erreur incorrect.</value>
  </data>
  <data name="CalibrationIncorrectInformationalInformationType" xml:space="preserve">
    <value>Type d'information informationnel incorrect.</value>
  </data>
  <data name="CalibrationIncorrectWarningInformationType" xml:space="preserve">
    <value>Type d'information d'avertissement incorrect.</value>
  </data>
  <data name="CalibrationInformation_130" xml:space="preserve">
    <value>Les identifiants AIM sont pris en charge.</value>
  </data>
  <data name="CalibrationInformation_131" xml:space="preserve">
    <value>Le scanner de code-barres transmet un identifiant AIM : {0}</value>
  </data>
  <data name="CalibrationInformation_132" xml:space="preserve">
    <value>Le scanner de code-barres pourrait transmettre un identifiant AIM : {0}</value>
  </data>
  <data name="CalibrationInformation_150" xml:space="preserve">
    <value>Le scanner de code-barres transmet une séquence de caractères de fin de ligne : {0}</value>
  </data>
  <data name="CalibrationInformation_160" xml:space="preserve">
    <value>Les caractères de séparateur de groupe sont pris en charge.</value>
  </data>
  <data name="CalibrationInformation_161" xml:space="preserve">
    <value>Les caractères de séparateur d'enregistrement sont pris en charge.</value>
  </data>
  <data name="CalibrationInformation_162" xml:space="preserve">
    <value>Les caractères de séparateur EDI sont pris en charge.</value>
  </data>
  <data name="CalibrationInformation_170" xml:space="preserve">
    <value>Le scanner de code-barres peut être configuré pour compenser le verrouillage des majuscules.</value>
  </data>
  <data name="CalibrationInformation_180" xml:space="preserve">
    <value>Le clavier de l'ordinateur prend en charge le script suivant : {0}</value>
  </data>
  <data name="CalibrationInformation_190" xml:space="preserve">
    <value>Le clavier de l'ordinateur est configuré pour la plateforme suivante : {0}</value>
  </data>
  <data name="CalibrationInformation_200" xml:space="preserve">
    <value>Certains caractères ASCII non invariants ne peuvent pas être détectés.</value>
  </data>
  <data name="CalibrationInformation_201" xml:space="preserve">
    <value>Certains caractères ASCII non invariants ne sont pas reconnus : {0}</value>
  </data>
  <data name="CalibrationInformation_202" xml:space="preserve">
    <value>Certaines combinaisons de caractères ASCII non invariants ne sont pas reconnues : {0}</value>
  </data>
  <data name="CalibrationInformation_210" xml:space="preserve">
    <value>Les codes-barres utilisant la syntaxe ISO/IEC 15434 ne peuvent pas être reconnus.</value>
  </data>
  <data name="CalibrationInformation_211" xml:space="preserve">
    <value>Les codes-barres utilisant la syntaxe ISO/IEC 15434 pour représenter les données EDI ne peuvent pas être lus de manière fiable.</value>
  </data>
  <data name="CalibrationInformation_212" xml:space="preserve">
    <value>Le caractère signalé {0} est ambigu. Les codes-barres utilisant la syntaxe ISO/IEC 15434 ne peuvent pas être lus de manière fiable.</value>
  </data>
  <data name="CalibrationInformation_220" xml:space="preserve">
    <value>Le scanner de code-barres ne transmet pas d'identifiant AIM.</value>
  </data>
  <data name="CalibrationInformation_221" xml:space="preserve">
    <value>L'identifiant AIM ne peut pas être reconnu.</value>
  </data>
  <data name="CalibrationInformation_230" xml:space="preserve">
    <value>Le scanner de code-barres transmet un préfixe : {0}</value>
  </data>
  <data name="CalibrationInformation_231" xml:space="preserve">
    <value>Le scanner de code-barres transmet un code : {0}</value>
  </data>
  <data name="CalibrationInformation_232" xml:space="preserve">
    <value>Le scanner de code-barres transmet un suffixe : {0}</value>
  </data>
  <data name="CalibrationInformation_240" xml:space="preserve">
    <value>Le scanner de code-barres ne transmet pas de séquence de caractères de fin de ligne (par exemple, un retour chariot).</value>
  </data>
  <data name="CalibrationInformation_250" xml:space="preserve">
    <value>Le caractère signalé {0} est ambigu. Il existe plusieurs clés pour le même caractère, chacune représentant un caractère attendu différent. Cependant, au plus, un seul des caractères attendus est invariant.</value>
  </data>
  <data name="CalibrationInformation_251" xml:space="preserve">
    <value>Certains caractères signalés sont ambigus. Il existe plusieurs clés pour le même caractère, chacune représentant un caractère ASCII non invariant attendu différent : {0}</value>
  </data>
  <data name="CalibrationInformation_252" xml:space="preserve">
    <value>Les identifiants AIM ne peuvent pas être reconnus. Le caractère signalé {0} est ambigu. Il existe plusieurs clés pour ce caractère qui représente le caractère de drapeau AIM ainsi que d'autres caractère(s) attendu(s).</value>
  </data>
  <data name="CalibrationInformation_253" xml:space="preserve">
    <value>Certains caractères ASCII non invariants signalés sont ambigus : {0}</value>
  </data>
  <data name="CalibrationInformation_254" xml:space="preserve">
    <value>Le caractère signalé {0} est ambigu. Les codes-barres utilisant la syntaxe ISO/IEC 15434 pour représenter les données EDI ne peuvent pas être lus de manière fiable.</value>
  </data>
  <data name="CalibrationInformation_255" xml:space="preserve">
    <value>Certaines séquences de caractères signalées sont ambigues. Ces caractères ne représentent pas des caractères invariants : {0}</value>
  </data>
  <data name="CalibrationInformation_256" xml:space="preserve">
    <value>La séquence de caractères signalée {0} est ambiguë. Cela peut empêcher la lecture de tout élément de données supplémentaire inclus dans un code-barres.</value>
  </data>
  <data name="CalibrationInformation_260" xml:space="preserve">
    <value>Les dispositions du clavier du scanner de code-barres et de l'ordinateur ne correspondent pas.</value>
  </data>
  <data name="CalibrationInformation_261" xml:space="preserve">
    <value>Les dispositions du clavier du scanner de code-barres et de l'ordinateur ne correspondent pas pour les caractères invariants.</value>
  </data>
  <data name="CalibrationInformation_262" xml:space="preserve">
    <value>Les dispositions du clavier du scanner de code-barres et de l'ordinateur ne correspondent pas pour les caractères ASCII non invariants.</value>
  </data>
  <data name="CalibrationInformation_263" xml:space="preserve">
    <value>Les dispositions du clavier du scanner de code-barres et de l'ordinateur ne correspondent pas lors de la représentation des séparateurs de groupe.</value>
  </data>
  <data name="CalibrationInformation_264" xml:space="preserve">
    <value>Les dispositions du clavier du scanner de code-barres et de l'ordinateur ne correspondent pas lors de la représentation des séparateurs d'enregistrement.</value>
  </data>
  <data name="CalibrationInformation_265" xml:space="preserve">
    <value>Les dispositions du clavier du scanner de code-barres et de l'ordinateur ne correspondent pas lors de la représentation des séparateurs EDI.</value>
  </data>
  <data name="CalibrationInformation_266" xml:space="preserve">
    <value>Les dispositions du clavier du scanner de code-barres et de l'ordinateur ne correspondent pas lors de la représentation des identifiants AIM.</value>
  </data>
  <data name="CalibrationInformation_267" xml:space="preserve">
    <value>La correspondance des dispositions du clavier du scanner de code-barres et de l'ordinateur ne peut pas être déterminée.</value>
  </data>
  <data name="CalibrationInformation_270" xml:space="preserve">
    <value>Le verrouillage des majuscules est activé.</value>
  </data>
  <data name="CalibrationInformation_271" xml:space="preserve">
    <value>Le verrouillage des majuscules peut être activé.</value>
  </data>
  <data name="CalibrationInformation_272" xml:space="preserve">
    <value>Le scanner de code-barres peut être configuré pour convertir les caractères en majuscules.</value>
  </data>
  <data name="CalibrationInformation_273" xml:space="preserve">
    <value>Le scanner de code-barres peut être configuré pour convertir les caractères en minuscules.</value>
  </data>
  <data name="CalibrationInformation_274" xml:space="preserve">
    <value>Le scanner de code-barres peut être configuré pour inverser la casse des caractères.</value>
  </data>
  <data name="CalibrationInformation_280" xml:space="preserve">
    <value>Le meilleur temps d'entrée de données au clavier signalé lors de l'étalonnage indique que le scanner de code-barres ne fonctionne pas de manière optimale.</value>
  </data>
  <data name="CalibrationInformation_300" xml:space="preserve">
    <value>Aucune donnée d'étalonnage n'a été signalée.</value>
  </data>
  <data name="CalibrationInformation_301" xml:space="preserve">
    <value>Les données signalées ne sont pas reconnues. Le mauvais code-barres a peut-être été scanné.</value>
  </data>
  <data name="CalibrationInformation_302" xml:space="preserve">
    <value>Trop de caractères détectés. Le mauvais code-barres a peut-être été scanné.</value>
  </data>
  <data name="CalibrationInformation_303" xml:space="preserve">
    <value>Des données partielles ont été signalées pour le code-barres d'étalonnage.</value>
  </data>
  <data name="CalibrationInformation_304" xml:space="preserve">
    <value>Les données signalées sont pour le mauvais code-barres d'étalonnage.</value>
  </data>
  <data name="CalibrationInformation_305" xml:space="preserve">
    <value>Une tentative a été faite pour calibrer un code-barres, mais aucun jeton de calibrage n'a été fourni.</value>
  </data>
  <data name="CalibrationInformation_310" xml:space="preserve">
    <value>Certains caractères invariants ne peuvent pas être détectés.</value>
  </data>
  <data name="CalibrationInformation_311" xml:space="preserve">
    <value>Certains caractères invariants ne sont pas reconnus par le scanner de code-barres dans sa configuration actuelle : {0}</value>
  </data>
  <data name="CalibrationInformation_312" xml:space="preserve">
    <value>Certaines combinaisons de touches incluant des caractères invariants ne sont pas reconnues : {0}</value>
  </data>
  <data name="CalibrationInformation_320" xml:space="preserve">
    <value>Aucun séparateur de groupe n'est signalé.</value>
  </data>
  <data name="CalibrationInformation_360" xml:space="preserve">
    <value>Le caractère signalé {0} est ambigu. Il existe plusieurs clés pour le même caractère, chacune représentant un caractère attendu différent.</value>
  </data>
  <data name="CalibrationInformation_361" xml:space="preserve">
    <value>Le caractère signalé {0} est ambigu. Le même caractère est signalé pour plusieurs séquences de touches mortes représentant différents caractères attendus.</value>
  </data>
  <data name="CalibrationInformation_362" xml:space="preserve">
    <value>Le caractère de touche morte signalé {0} est ambigu. Il existe plusieurs touches mortes pour le même caractère, chacune représentant un caractère attendu différent.</value>
  </data>
  <data name="CalibrationInformation_363" xml:space="preserve">
    <value>La séquence de caractères signalée {0} est ambiguë. La même séquence est signalée pour plusieurs séquences de caractères attendues.</value>
  </data>
  <data name="CalibrationInformation_364" xml:space="preserve">
    <value>La séquence de caractères signalée {0} est ambiguë. La même séquence est signalée pour plusieurs touches mortes dans la disposition du clavier du scanner de code-barres.</value>
  </data>
  <data name="CalibrationInformation_365" xml:space="preserve">
    <value>Le caractère {0} ne peut pas être représenté de manière fiable en raison de l'incompatibilité avec la disposition du clavier.</value>
  </data>
  <data name="CalibrationInformation_366" xml:space="preserve">
    <value>La séquence de caractères signalée {0} est ambiguë. Cela représente le caractère de séparateur de groupe.</value>
  </data>
  <data name="CalibrationInformation_367" xml:space="preserve">
    <value>Certains caractères signalés sont ambigus. Ils peuvent être signalés individuellement mais sont également utilisés pour composer des ligatures : {0}</value>
  </data>
  <data name="CalibrationInformation_370" xml:space="preserve">
    <value>Les données d'étalonnage signalées ne peuvent pas être traitées. Elles ne comprennent pas les délimiteurs attendus.</value>
  </data>
  <data name="CalibrationInformation_371" xml:space="preserve">
    <value>Les données d'étalonnage signalées ne peuvent pas être traitées. Aucun caractère ne peut être déterminé pour agir comme un délimiteur temporaire.</value>
  </data>
  <data name="CalibrationInformation_390" xml:space="preserve">
    <value>Échec de l'étalonnage. {0}</value>
  </data>
  <data name="CalibrationInformation_391" xml:space="preserve">
    <value>Échec de l'étalonnage. {0}</value>
  </data>
  <data name="CalibrationInvalidAdviceItem" xml:space="preserve">
    <value>Élément de conseil invalide.</value>
  </data>
  <data name="CalibrationInvalidInformationLevel" xml:space="preserve">
    <value>Niveau d'information invalide.</value>
  </data>
  <data name="Calibration_Error_001" xml:space="preserve">
    <value>Échec de l'insertion des espaces réservés.</value>
    <comment>Error</comment>
  </data>
  <data name="Calibration_Error_002" xml:space="preserve">
    <value>Argument invalide fourni à la méthode de remplacement d'expression régulière.</value>
    <comment>Error</comment>
  </data>
  <data name="Calibration_Error_003" xml:space="preserve">
    <value>L'expression régulière a expiré lors de la tentative de correspondance.</value>
    <comment>Error</comment>
  </data>
  <data name="Unspecified" xml:space="preserve">
    <value>Non spécifié</value>
  </data>
  <data name="UnusedExtendedAsciiCharacterNotFound" xml:space="preserve">
    <value>Impossible de trouver un caractère approprié pour un espace réservé temporaire. Tous les caractères ASCII étendus sont déjà utilisés dans la chaîne d'entrée.</value>
    <comment>Error</comment>
  </data>
</root>